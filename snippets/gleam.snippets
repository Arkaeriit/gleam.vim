snippet fn "fn"
	fn ${1:function_name}(${2}) -> ${3:Nil} {
		${0:${VISUAL:todo}}
	}
snippet pfn "pub fn"
	pub fn ${1:function_name}(${2}) -> ${3:Nil} {
		${0:${VISUAL:todo}}
	}
snippet test "test fn"
	pub fn ${1:name}_test() {
		${0}
	}
snippet af "anonymous fn"
	fn(${1}) { ${0:${VISUAL}} }
snippet l "let assignment"
	let ${1} = ${0}
snippet - "->"
	-> ${0}
snippet case "case expression"
	case ${1} {
	  ${2} -> ${0}
	}
snippet ty "type"
	type ${1:Name} {
		${0:$1}
	}
snippet pty "pub type"
	pub type ${1:Name} {
		${0:$1}
	}
snippet ext "external type"
	external type ${0}
snippet pext "pub external type"
	pub external type ${0}
snippet exfn "external fn"
	external fn ${1:function_name}(${2}) -> ${3}
		= "${4}" "${0}"
snippet pexfn "pub external fn"
	pub external fn ${1:function_name}(${2}) -> ${3}
		= "${4}" "${0}"
snippet im "import"
	import ${0:gleam/result}
snippet p "|>"
	|> ${0}
snippet tup "tuple()"
	tuple(${0:${VISUAL}})
snippet tf "fn(Type) -> Type"
	fn(${1}) -> ${0}
